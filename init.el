;; -*- coding: utf-8 -*-

(setq emacs-load-start-time (current-time))
(add-to-list 'load-path (expand-file-name "~/.emacs.d/lisp"))
;;----------------------------------------------------------------------------
;; Which functionality to enable (use t or nil for true and false)
;;----------------------------------------------------------------------------
(setq *macbook-pro-support-enabled* t)
(setq *is-a-mac* (eq system-type 'darwin))
(setq *is-carbon-emacs* (and *is-a-mac* (eq window-system 'mac)))
(setq *is-cocoa-emacs* (and *is-a-mac* (eq window-system 'ns)))
(setq *win32* (eq system-type 'windows-nt) )
(setq *cygwin* (eq system-type 'cygwin) )
(setq *linux* (or (eq system-type 'gnu/linux) (eq system-type 'linux)) )
(setq *unix* (or *linux* (eq system-type 'usg-unix-v) (eq system-type 'berkeley-unix)) )
(setq *linux-x* (and window-system *linux*) )
(setq *xemacs* (featurep 'xemacs) )
(setq *emacs24* (and (not *xemacs*) (or (>= emacs-major-version 24))) )
(setq *no-memory* (cond
                   (*is-a-mac*
                    (< (string-to-number (nth 1 (split-string (shell-command-to-string "sysctl hw.physmem")))) 4000000000))
                   (*linux* nil)
                   (t nil)))

(require 'cl-lib)
(require 'init-utils)
(require 'init-site-lisp)
(require 'init-elpa)
(require 'init-shortcuts)
(require 'init-linum-mode)
(require 'init-ido)
(require 'init-css)
(require 'init-web-mode)
(require 'init-misc)
(require 'init-headerline)
(require 'init-keybinding)


(when (require 'time-date nil t)
   (message "Emacs startup time: %d seconds."
    (time-to-seconds (time-since emacs-load-start-time))))


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(blink-cursor-mode nil)
 '(blink-matching-delay 5)
 '(blink-matching-paren nil)
 '(blink-matching-paren-on-screen nil)
 '(font-lock-global-modes (quote (not speedbar-mode)))
 '(fringe-mode 0 nil (fringe))
 '(global-visual-line-mode t)
 '(inhibit-startup-screen nil)
 '(line-number-mode nil)
 '(minibuffer-auto-raise t)
 '(mode-line-in-non-selected-windows nil)
 '(org-adapt-indentation t)
 '(org-indent-boundary-char 42)
 '(org-indent-indentation-per-level 2)
 '(org-list-indent-offset 5)
 '(org-startup-indented t)
 '(package-archives
	 (quote
		(("melpa" . "http://melpa.org/packages/")
		 ("melpa-stable" . "http://stable.melpa.org/packages/")
		 ("marmalade" . "http://marmalade-repo.org/packages/"))))
 '(scalable-fonts-allowed t)
 '(show-paren-mode t)
 '(text-scale-mode-step 1.1)
 '(truncate-lines t)
 '(visual-line-fringe-indicators (quote (nil nil)))
 '(window-sides-vertical nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#25292C" :foreground "#A4A5A6" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 160 :width normal :foundry "nil" :family "Source Code Pro"))))
 '(bold ((t (:weight semi-bold))))
 '(bold-italic ((t (:slant italic :weight semi-bold))))
 '(border ((t (:background "dark red"))))
 '(button ((t (:inherit link :foreground "#A4A5A6"))))
 '(comint-highlight-input ((t (:weight semi-bold))))
 '(css-property ((t (:inherit nil :foreground "chocolate1"))))
 '(css-selector ((t (:inherit escape-glyph))))
 '(cursor ((t (:background "#EAC15A"))))
 '(custom-button ((t (:foreground "#A3A4A5" :box (:line-width 1 :color "#A4A5A6" :style released-button) :family "source sans pro"))))
 '(custom-button-mouse ((t (:background "#a4a5a6" :foreground "#25292c" :box (:line-width 1 :color "#a4a5a6") :family "source sans pro"))))
 '(custom-button-pressed ((t (:background "#d4d4d4" :foreground "#333333" :box (:line-width 1 :color "#8c8c8c") :family "source sans pro"))))
 '(custom-documentation ((t (:foreground "#EAC15A"))))
 '(custom-group-tag ((t (:inherit variable-pitch :foreground "#F5F5F5" :weight bold :height 1.416))))
 '(custom-link ((t (:inherit link :background "#34393C" :foreground "#A4A5A6" :underline nil))))
 '(custom-state ((t (:foreground "#6BA4AF"))))
 '(custom-variable-tag ((t (:foreground "#FAFAFA" :weight bold))))
 '(custom-visibility ((t (:inherit link :background "#34393C" :foreground "#A4A5A6" :underline nil :height 0.8))))
 '(error ((t (:foreground "#C35159" :weight semi-bold))))
 '(escape-glyph ((t (:foreground "#EAC15A"))))
 '(eshell-prompt ((t (:foreground "#EAC15A" :weight semi-bold))))
 '(fixed-pitch ((t (:family "source code pro"))))
 '(font-lock-builtin-face ((t (:inherit link))))
 '(font-lock-comment-face ((t (:foreground "#CD422F"))))
 '(font-lock-keyword-face ((t (:foreground "#EAC15A"))))
 '(font-lock-string-face ((t nil)))
 '(fringe ((t (:background "#25292C"))))
 '(header-line ((t (:inherit mode-line))))
 '(helm-selection ((t (:background "#eac15a" :foreground "#1c1f21"))))
 '(helm-source-header ((t (:background "#D47735" :foreground "#25292C" :weight semi-bold :family "source sans pro"))))
 '(highlight ((t (:background "#EAC15A" :foreground "#1C1F21"))))
 '(hl-line ((t (:inherit highlight :background "#1C1F21"))))
 '(ido-first-match ((t (:foreground "#EAC15A" :weight semi-bold))))
 '(ido-incomplete-regexp ((t (:inherit font-lock-warning-face :foreground "#C35159" :weight normal))))
 '(ido-subdir ((t (:foreground "#6BA4AF"))))
 '(info-menu-star ((t (:foreground "#EAC15A"))))
 '(info-title-1 ((t (:inherit info-title-2 :foreground "#F5F5F5" :weight light :height 1.618))))
 '(info-title-2 ((t (:inherit info-title-3 :foreground "#F5F5F5" :weight light :height 1.416))))
 '(info-xref ((t (:inherit link :foreground "#FEFEFE" :underline nil :weight semi-bold))))
 '(isearch ((t (:background "#EAC15A" :foreground "#1c1f21"))))
 '(link ((t (:foreground "#94CAFF"))))
 '(link-visited ((t (:inherit link :foreground "#EAC15A"))))
 '(linum ((t (:inherit (shadow default) :background "#1C1F21" :foreground "#595C5F" :weight semi-light :height 0.875 :family "source sans pro"))))
 '(minibuffer-prompt ((t (:foreground "#EAC15A"))))
 '(mode-line ((t (:background "#1C1f21" :foreground "#55585B" :box (:line-width 3 :color "#1C1F21") :weight semi-light :width ultra-expanded :family "source sans pro"))))
 '(org-agenda-done ((t (:foreground "#A5FF54"))))
 '(org-block ((t (:inherit shadow :family "source code pro"))))
 '(org-column ((t (:inherit default :background "grey30" :strike-through nil :underline nil :slant normal :weight normal))))
 '(org-column-title ((t (:background "grey30" :underline t :weight bold :family "source sans pro"))))
 '(org-date ((t (:foreground "#6BA4AF" :family "source sans pro"))))
 '(org-date-selected ((t (:foreground "Pink" :inverse-video t :family "source sans pro"))))
 '(org-default ((t (:family "source sans pro"))))
 '(org-document-info ((t (:foreground "pale turquoise" :family "source sans pro"))))
 '(org-document-info-keyword ((t (:inherit shadow :family "source sans pro"))))
 '(org-document-title ((t (:foreground "pale turquoise" :weight bold :family "source sans pro"))))
 '(org-done ((t (:foreground "#6BA4AF" :weight bold :family "source sans pro"))))
 '(org-drawer ((t (:foreground "LightSkyBlue" :family "source sans pro"))))
 '(org-ellipsis ((t (:foreground "LightGoldenrod" :underline t :family "source sans pro"))))
 '(org-footnote ((t (:foreground "Cyan" :underline t :family "source sans pro"))))
 '(org-formula ((t (:foreground "chocolate1" :family "source sans pro"))))
 '(org-habit-alert-face ((t (:background "gold" :family "source sans pro"))))
 '(org-habit-alert-future-face ((t (:background "darkgoldenrod" :family "source sans pro"))))
 '(org-habit-clear-face ((t (:background "blue" :family "source sans pro"))))
 '(org-habit-clear-future-face ((t (:background "midnightblue" :family "source sans pro"))))
 '(org-habit-overdue-face ((t (:background "firebrick" :family "source sans pro"))))
 '(org-habit-overdue-future-face ((t (:background "darkred" :family "source sans pro"))))
 '(org-habit-ready-face ((t (:background "forestgreen" :family "source sans pro"))))
 '(org-habit-ready-future-face ((t (:background "darkgreen" :family "source sans pro"))))
 '(org-headline-done ((t (:foreground "LightSalmon" :family "source sans pro"))))
 '(org-hide ((t (:foreground "#25292C" :family "source code pro"))))
 '(org-indent ((t (:foreground "#25292c" :family "source code pro"))) t)
 '(org-inlinetask ((t (:inherit shadow :family "source sans pro"))))
 '(org-latex-and-related ((t (:foreground "burlywood" :family "source sans pro"))))
 '(org-level-1 ((t (:inherit outline-1 :foreground "#F5F5F5" :weight bold :height 1.618 :family "source sans pro"))))
 '(org-level-2 ((t (:inherit outline-2 :foreground "#F5F5F5" :weight bold :height 1.416 :family "source sans pro"))))
 '(org-level-3 ((t (:inherit nil :foreground "#F5F5F5" :weight semi-bold :height 1.0 :family "source sans pro"))))
 '(org-level-4 ((t (:inherit outline-4 :foreground "#F5F5F5" :family "source sans pro"))))
 '(org-level-5 ((t (:inherit outline-5 :foreground "#BDBDBD" :weight normal :family "source sans pro"))))
 '(org-level-6 ((t (:inherit outline-6 :foreground "#757575" :weight bold :family "source sans pro"))))
 '(org-level-7 ((t (:inherit outline-7 :family "source sans pro"))))
 '(org-level-8 ((t (:inherit outline-8 :family "source sans pro"))))
 '(org-link ((t (:inherit link :family "source sans pro"))))
 '(org-list-dt ((t (:weight bold :family "source sans pro"))))
 '(org-macro ((t (:inherit org-latex-and-related :family "source sans pro"))))
 '(org-meta-line ((t (:inherit font-lock-comment-face :family "source sans pro"))))
 '(org-priority ((t (:inherit font-lock-keyword-face :family "source sans pro"))))
 '(org-property-value ((t (:family "source sans pro"))) t)
 '(org-scheduled ((t (:foreground "PaleGreen" :family "source sans pro"))))
 '(org-scheduled-previously ((t (:foreground "chocolate1" :family "source sans pro"))))
 '(org-scheduled-today ((t (:foreground "PaleGreen" :family "source sans pro"))))
 '(org-sexp-date ((t (:foreground "Cyan" :family "source sans pro"))))
 '(org-table ((t (:foreground "LightSkyBlue" :family "source code pro"))))
 '(org-tag ((t (:weight bold :family "source sans pro"))))
 '(org-tag-group ((t (:inherit org-tag :family "source sans pro"))))
 '(org-target ((t (:underline t :family "source sans pro"))))
 '(org-time-grid ((t (:foreground "LightGoldenrod" :family "source sans pro"))))
 '(org-todo ((t (:foreground "#EAC15A" :weight bold :family "source sans pro"))))
 '(org-upcoming-deadline ((t (:foreground "chocolate1" :family "source sans pro"))))
 '(org-verbatim ((t (:inherit shadow :family "source sans pro"))))
 '(org-warning ((t (:inherit font-lock-warning-face :family "source sans pro"))))
 '(region ((t (:background "#34393C"))))
 '(show-paren-match ((t (:background "#1c1f21" :foreground "#eac15a"))))
 '(show-paren-mismatch ((t (:background "#c35159" :foreground "#25292c"))))
 '(vertical-border ((t (:background "#1C1F21" :distant-foreground "#1C1F21" :foreground "#1C1F21"))))
 '(web-mode-block-delimiter-face ((t (:inherit nil :foreground "chocolate1"))))
 '(web-mode-block-string-face ((t nil)))
 '(web-mode-function-call-face ((t (:foreground "chocolate1"))))
 '(web-mode-function-name-face ((t (:foreground "chocolate1"))))
 '(web-mode-html-attr-value-face ((t (:inherit font-lock-string-face :foreground "#EAC15A"))))
 '(web-mode-html-tag-bracket-face ((t (:foreground "#DE8F4A"))))
 '(web-mode-html-tag-face ((t (:foreground "#DE8F4A"))))
 '(web-mode-variable-name-face ((t (:inherit link))))
 '(widget-field ((t (:background "#303538" :box (:line-width 1 :color "#676A6D")))))
 '(window-divider ((t (:foreground "red"))))
 '(window-divider-first-pixel ((t (:foreground "blue"))))
 '(window-divider-last-pixel ((t (:foreground "orange")))))
